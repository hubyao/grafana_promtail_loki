#  配置 promtail 程序运行时行为。如指定监听的ip、port等信息。
server:
  http_listen_port: 9080
  grpc_listen_port: 0
# positions 文件用于记录 Promtail 发现的目标。该字段用于定义如何保存 postitions.yaml 文件
# Promtail 发现的目标就是指日志文件。
positions:
  filename: /etc/promtail/positions.yaml   # 游标记录上一次同步位置
  sync_period: 10s #10秒钟同步一次
# 配置 Promtail 如何连接到 Loki 的多个实例，并向每个实例发送日志。
# Note：如果其中一台远程Loki服务器无法响应或发生任何可重试的错误，这将影响将日志发送到任何其他已配置的远程Loki服务器。
# 发送是在单个线程上完成的！ 如果要发送到多个远程Loki实例，通常建议并行运行多个Promtail客户端。
clients:
  - url: http://172.16.249.244:3100/api/prom/push
# 配置 Promtail 如何发现日志文件，以及如何从这些日志文件抓取日志。
scrape_configs:  # 指定要抓取日志的目标。
- job_name: prod2-api-http-log  
  pipeline_stages: 
    - regex:
        expression: "^(?P<time>(\\d{4}-\\d{2}-\\d{2})\\s(\\d{2}:\\d{2}:\\d{2})) (?P<logtype>(\\[(.+?)\\])) (?P<appname>(\\[(.+?)\\])) (?P<requesttype>(\\[(.+?)\\])) (?P<tid>(\\[(.+?)\\])) (?P<cid>(\\[(.+?)\\])) (?P<traceid>(\\[(.+?)\\])) (?P<spanid>(\\[(.+?)\\])) (?P<parentid>(\\[(.+?)\\])) (?P<trace>(trace\\[(.+?)\\])) (?P<data>(.*)) (?P<logcate>(.*))"
    - labels:
        logtype:
        logcate:
    - timestamp:
        source: time
        format: RFC3339Nano
  static_configs:
  - targets:
      - localhost # 指定抓取目标，i.e.抓取哪台设备上的文件
    labels: # 指定该日志流的标签
      job: api-http-log 
      __path__: /var/logs/api/http/*.log  # 指定抓取路径，该匹配标识抓取 /var/log/host 目录下的所有文件。注意：不包含子目录下的文件

- job_name: prod2-admin-api-worker-log
  pipeline_stages: 
    - regex:
        expression: "^(?P<time>(.*)) (?P<logtype>(\\[(.+?)\\])) (?P<loginfo>(.*)) (?P<data>(.*)) (?P<logcate>(.*)) (?P<app_name>(.*))"
    - labels:
        logtype:
        logcate:
    - timestamp:
        source: time
        format: RFC3339Nano
  static_configs:
  - targets:
      - localhost # 指定抓取目标，i.e.抓取哪台设备上的文件
    labels: # 指定该日志流的标签
      job: admin-api-worker-log
      __path__: /var/logs/admin-api/workers/*.log  # 指定抓取路径，该匹配标识抓取 /var/log/host 目录下的所有文件。注意：不包含子目录下的文件
- job_name: prod2-admin-api-http-log  
  pipeline_stages: 
    - regex:
        expression: "^(?P<time>(\\d{4}-\\d{2}-\\d{2})\\s(\\d{2}:\\d{2}:\\d{2})) (?P<logtype>(\\[(.+?)\\])) (?P<appname>(\\[(.+?)\\])) (?P<requesttype>(\\[(.+?)\\])) (?P<tid>(\\[(.+?)\\])) (?P<cid>(\\[(.+?)\\])) (?P<traceid>(\\[(.+?)\\])) (?P<spanid>(\\[(.+?)\\])) (?P<parentid>(\\[(.+?)\\])) (?P<trace>(trace\\[(.+?)\\])) (?P<data>(.*)) (?P<logcate>(.*))"
    - labels:
        logtype:
        logcate:
    - timestamp:
        source: time
        format: RFC3339Nano
  static_configs:
  - targets:
      - localhost # 指定抓取目标，i.e.抓取哪台设备上的文件
    labels: # 指定该日志流的标签
      job: admin-api-http-log 
      __path__: /var/logs/admin-api/http/*.log  # 指定抓取路径，该匹配标识抓取 /var/log/host 目录下的所有文件。注意：不包含子目录下的文件

- job_name: prod2-admin-api-worker-log
  pipeline_stages: 
    - regex:
        expression: "^(?P<time>(.*)) (?P<logtype>(\\[(.+?)\\])) (?P<loginfo>(.*)) (?P<data>(.*)) (?P<logcate>(.*)) (?P<app_name>(.*))"
    - labels:
        logtype:
        logcate:
    - timestamp:
        source: time
        format: RFC3339Nano
  static_configs:
  - targets:
      - localhost # 指定抓取目标，i.e.抓取哪台设备上的文件
    labels: # 指定该日志流的标签
      job: api-worker-log
      __path__: /var/logs/api/workers/*.log  # 指定抓取路径，该匹配标识抓取 /var/log/host 目录下的所有文件。注意：不包含子目录下的文件

- job_name: prod2-ads-api-http-log  
  pipeline_stages: 
    - regex:
        expression: "^(?P<time>(\\d{4}-\\d{2}-\\d{2})\\s(\\d{2}:\\d{2}:\\d{2})) (?P<logtype>(\\[(.+?)\\])) (?P<appname>(\\[(.+?)\\])) (?P<requesttype>(\\[(.+?)\\])) (?P<tid>(\\[(.+?)\\])) (?P<cid>(\\[(.+?)\\])) (?P<traceid>(\\[(.+?)\\])) (?P<spanid>(\\[(.+?)\\])) (?P<parentid>(\\[(.+?)\\])) (?P<trace>(trace\\[(.+?)\\])) (?P<data>(.*)) (?P<logcate>(.*))"
    - labels:
        logtype:
        logcate:
    - timestamp:
        source: time
        format: RFC3339Nano
  static_configs:
  - targets:
      - localhost # 指定抓取目标，i.e.抓取哪台设备上的文件
    labels: # 指定该日志流的标签
      job: ads-api-http-log 
      __path__: /var/logs/ads-api/http/*.log  # 指定抓取路径，该匹配标识抓取 /var/log/host 目录下的所有文件。注意：不包含子目录下的文件

- job_name: prod2-ads-api-worker-log
  pipeline_stages: 
    - regex:
        expression: "^(?P<time>(.*)) (?P<logtype>(\\[(.+?)\\])) (?P<loginfo>(.*)) (?P<data>(.*)) (?P<logcate>(.*)) (?P<app_name>(.*))"
    - labels:
        logtype:
        logcate:
    - timestamp:
        source: time
        format: RFC3339Nano
  static_configs:
  - targets:
      - localhost # 指定抓取目标，i.e.抓取哪台设备上的文件
    labels: # 指定该日志流的标签
      job: api-worker-log
      __path__: /var/logs/api/workers/*.log  # 指定抓取路径，该匹配标识抓取 /var/log/host 目录下的所有文件。注意：不包含子目录下的文件


# - job_name: prod2-error
#   pipeline_stages:
#     - regex:
#         expression: "^(?P<time>(\\d{4}-\\d{2}-\\d{2})\\s(\\d{2}:\\d{2}:\\d{2})) (?P<logtype>(\\[(.+?)\\])) (?P<appname>(\\[(.+?)\\])) (?P<requesttype>(\\[(.+?)\\])) (?P<tid>(\\[(.+?)\\])) (?P<cid>(\\[(.+?)\\])) (?P<traceid>(\\[(.+?)\\])) (?P<spanid>(\\[(.+?)\\])) (?P<parentid>(\\[(.+?)\\])) (?P<trace>(trace\\[(.+?)\\])) (?P<data>(.*)) (?P<logcate>(.*))"
#     - labels:
#         logtype:
#         logcate:
#   static_configs:
#   - targets:
#       - localhost
#     labels:
#       job: error
#       __path__: /var/logs/error*.log
# - job_name: prod2-system
#   static_configs:
#   - targets:
#       - localhost
#     labels:
#       job: varlogs
#       __path__: /var/log/*log
#   pipeline_stages:
#       - regex:
#           expression: "^(?P<ip>\\S+) (?P<identd>\\S+) (?P<user>\\S+) \\[(?P<timestamp>[\\w:/]+\\s[+\\-]\\d{4})\\] \"(?P<action>\\S+)\\s?(?P<path>\\S+)?\\s?(?P<protocol>\\S+)?\" (?P<status_code>\\d{3}|-) (?P<size>\\d+|-)\\s?\"?(?P<referer>[^\"]*)\"?\\s?\"?(?P<useragent>[^\"]*)?\"?$"
#       - labels:
#           job: apache
#           env: dev
#           __path__: /var/log/app.log
      # - timestamp:
          # source: time
          # format: '2006-Jan-02 15:04:05.999'
          # location: "UTC"
      # - output:
          # source: msg
# scrape_configs:
# - job_name: prod2-system
#   pipeline_stages:
#     - regex:
#         expression: "^(?P<ip>\\S+) (?P<identd>\\S+) (?P<user>\\S+) \\[(?P<timestamp>[\\w:/]+\\s[+\\-]\\d{4})\\] \"(?P<action>\\S+)\\s?(?P<path>\\S+)?\\s?(?P<protocol>\\S+)?\" (?P<status_code>\\d{3}|-) (?P<size>\\d+|-)\\s?\"?(?P<referer>[^\"]*)\"?\\s?\"?(?P<useragent>[^\"]*)?\"?$"
#     - labels:
#       action:
#       status_code:
#   static_configs:
#   - targets:
#       - localhost
#     labels:
#       job: varlogs
#       __path__: /var/log/*log
# scrape_configs:
#   - job_name: prod2-system
#     pipeline_stages:
#       - regex:
#         expression: "^(?P<ip>\\S+) (?P<identd>\\S+) (?P<user>\\S+) \\[(?P<timestamp>[\\w:/]+\\s[+\\-]\\d{4})\\] \"(?P<action>\\S+)\\s?(?P<path>\\S+)?\\s?(?P<protocol>\\S+)?\" (?P<status_code>\\d{3}|-) (?P<size>\\d+|-)\\s?\"?(?P<referer>[^\"]*)\"?\\s?\"?(?P<useragent>[^\"]*)?\"?$"
#       - labels:
#         action:
#         status_code:
#     static_configs:
#     - targets:
#         - localhost
#       labels:
#         job: apache
#         env: dev
#         __path__: /var/log/app.log

# scrape_configs:
#   - job_name: prod2-system  
#     pipeline_stages:
#     static_configs:
#     - targets:
#         - localhost
#       labels:
#         job: syslog
#         __path__: /var/log/syslog
#   - job_name: prod2-system
#     pipeline_stages:
#     static_configs:
#     - targets:
#         - localhost
#       labels:
#         job: apache
#         __path__: /var/log/app.log
#   - job_name: prod2-system
#     pipeline_stages:
#         - regex:
#           expression: "^(?P<ip>\\S+) (?P<identd>\\S+) (?P<user>\\S+) \\[(?P<timestamp>[\\w:/]+\\s[+\\-]\\d{4})\\] \"(?P<action>\\S+)\\s?(?P<path>\\S+)?\\s?(?P<protocol>\\S+)?\" (?P<status_code>\\d{3}|-) (?P<size>\\d+|-)\\s?\"?(?P<referer>[^\"]*)\"?\\s?\"?(?P<useragent>[^\"]*)?\"?$"
#       - labels:
#           action:
#           status_code:
#     static_configs:
#     - targets:
#         - localhost
#       labels:
#         job: apache
#         env: dev
#         __path__: /var/log/app.log


# scrape_configs:
#   - job_name: prod2-system
#     pipeline_stages:   
#     - regex:
#         expression: "^(?P<ip>\\S+) (?P<identd>\\S+) (?P<user>\\S+) \\[(?P<timestamp>[\\w:/]+\\s[+\\-]\\d{4})\\] \"(?P<action>\\S+)\\s?(?P<path>\\S+)?\\s?(?P<protocol>\\S+)?\" (?P<status_code>\\d{3}|-) (?P<size>\\d+|-)\\s?\"?(?P<referer>[^\"]*)\"?\\s?\"?(?P<useragent>[^\"]*)?\"?$"
#     - labels:
#         action:
#         status_code:
#         date:
#         time:
#         ip:
#         timestamp:           
#     - timestamp:
#         source: timestamp
#         format: "02/Jan/2006:15:04:05 -0700"
#     static_configs:
#     - targets:
#       - localhost
#       labels:
#        job: apache
#        env: dev
#        __path__: /var/log/*.log       
# scrape_configs:
# - job_name: prod2-system
#   static_configs:
#   - targets:
#       - localhost
#     labels:
#       job: apache
#       env: dev
#       __path__: /var/log/*.log
#   pipeline_stages:
#     - regex:
#       expression: "^(?P<ip>\\S+) (?P<identd>\\S+) (?P<user>\\S+) \\[(?P<timestamp>[\\w:/]+\\s[+\\-]\\d{4})\\] \"(?P<action>\\S+)\\s?(?P<path>\\S+)?\\s?(?P<protocol>\\S+)?\" (?P<status_code>\\d{3}|-) (?P<size>\\d+|-)\\s?\"?(?P<referer>[^\"]*)\"?\\s?\"?(?P<useragent>[^\"]*)?\"?$"
#     - labels:
#       action:
#       status_code:
# scrape_configs:
#  - job_name: prod2-system
#    pipeline_stages:
#    - docker:
#    static_configs:
#    - targets:
#       - localhost
#      labels:
#       job: varlogs
#       host: yourhost
#       __path__: /var/log/*.log
